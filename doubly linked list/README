Doubly linked list is a complex type of linked list in which a node contains a pointer to the previous as well as the next node in the sequence. Therefore, in a doubly linked list, a node consists of three parts: node data, pointer to the next node in sequence (next pointer) , pointer to the previous node 
Insertion at beginning
Adding the node into the linked list at beginning.
Insertion at end
Adding the node into the linked list to the end.
Insertion after specified node
Adding the node into the linked list after the specified node.
Deletion at beginning
Removing the node from beginning of the list
Deletion at the end
Removing the node from end of the list.
Deletion of the node having given data
Removing the node which is present just after the node containing the given data.
Searching
Comparing each node data with the item to be searched and return the location of the item in the list if the item found else return null.
Traversing
Visiting each node of the list at least once in order to perform some specific operation like searching, sorting, display, etc.
